apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafdrop.fullname" . }}
  labels:
    {{- include "kafdrop.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kafdrop.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kafdrop.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
        {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
        {{- toYaml . | nindent 8 }}
        {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: SCHEMAREGISTRY_CONNECT
              value: {{ include "kafdrop.schema-registry.url" . | quote }}
            - name: KAFKA_BROKERCONNECT
              value: "{{ .Values.kafka.brokerConnect }}"
            - name: KAFKA_PROPERTIES
              value: "{{ .Values.kafka.properties }}"
            - name: KAFKA_TRUSTSTORE
              value: "{{ .Values.kafka.truststore }}"
            - name: KAFKA_KEYSTORE
              value: "{{ .Values.kafka.keystore }}"
            - name: JVM_OPTS
              value: "{{ .Values.jvm.opts }}"
            - name: JMX_PORT
              value: "{{ .Values.jmx.port }}"
            - name: SERVER_SERVLET_CONTEXTPATH
              value: "{{ .Values.server.servlet.contextPath | trimSuffix "/" }}"
            - name: HOST
              value: "{{ .Values.host }}"
            - name: KAFKA_PROPERTIES_FILE
              value: "{{ .Values.kafka.propertiesFile }}"
            - name: KAFKA_TRUSTSTORE_FILE
              value: "{{ .Values.kafka.truststoreFile }}"
            - name: KAFKA_KEYSTORE_FILE
              value: "{{ .Values.kafka.keystoreFile }}"
            - name: SERVER_PORT
              value: "{{ .Values.server.port }}"
            - name: CMD_ARGS
  {{- if .Values.mountProtoDesc.enabled }}
              value: "--message.format=PROTOBUF --protobufdesc.directory=/protodesc/ {{ .Values.cmdArgs }}"
  {{- else }}
              value: "{{ .Values.cmdArgs }}"
  {{- end }}
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: tcp
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: tcp
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
